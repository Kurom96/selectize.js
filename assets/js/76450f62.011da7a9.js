"use strict";(self.webpackChunkselectize_dev=self.webpackChunkselectize_dev||[]).push([[8487],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(t),f=o,m=p["".concat(l,".").concat(f)]||p[f]||u[f]||a;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8189:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={title:"nanoid",description:"API Reference for nanoid"},i="API Documentation for nanoid",c={unversionedId:"API/nanoid",id:"API/nanoid",title:"nanoid",description:"API Reference for nanoid",source:"@site/docs/API/nanoid.mdx",sourceDirName:"API",slug:"/API/nanoid",permalink:"/docs/API/nanoid",draft:!1,tags:[],version:"current",frontMatter:{title:"nanoid",description:"API Reference for nanoid"}},l={},s=[{value:"nanoid()",id:"nanoid",level:2}],d={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"api-documentation-for-nanoid"},"API Documentation for nanoid"),(0,o.kt)("a",{name:"nanoid"}),(0,o.kt)("h2",{id:"nanoid"},"nanoid()"),(0,o.kt)("p",null,"nanoid v3 | MIT license | ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ai/nanoid"},"https://github.com/ai/nanoid"),"\nGenerates a random ID. We use this to generate unique names for the input fields so that\nthe browser doesn't try to autofill them. This is a modified version of the original\nnanoid function that uses a shorter ID."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Modified by Ris Adams ",(0,o.kt)("a",{parentName:"li",href:"mailto:ris@risadams.com"},"ris@risadams.com")," 2023-01-05 (Modified to support Selectize needs)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Kind"),": global function"))}u.isMDXComponent=!0}}]);