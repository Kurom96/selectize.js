"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9122],{3813:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>k,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const r={title:"Events",description:"event reference"},o=void 0,d={unversionedId:"events",id:"events",title:"Events",description:"event reference",source:"@site/docs/events.mdx",sourceDirName:".",slug:"/events",permalink:"/docs/events",draft:!1,tags:[],version:"current",frontMatter:{title:"Events",description:"event reference"},sidebar:"docsSidebar",previous:{title:"Usage",permalink:"/docs/usage"},next:{title:"Contributing to Selectize",permalink:"/docs/contribute"}},i={},p=[],m={toc:p};function k(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In the usage documentation, a few callbacks are listed that allow you to listen for certain events. Callbacks aren't always ideal though; specifically when you wish to have multiple handlers."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Event"),(0,l.kt)("th",{parentName:"tr",align:null},"Params"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"initialize"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked once the control is completely initialized.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"change"'),(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the value of the control changes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"focus"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the control gains focus.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"blur"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the control loses focus.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"item_add"'),(0,l.kt)("td",{parentName:"tr",align:null},"value, item"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when an item is added (i.e., when an option is selected)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"item_remove"'),(0,l.kt)("td",{parentName:"tr",align:null},"value, $item"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when an item is deselected.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"item_select"'),(0,l.kt)("td",{parentName:"tr",align:null},"item"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when an item is selected.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"clear"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the control is manually cleared via the clear() method.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"option_add"'),(0,l.kt)("td",{parentName:"tr",align:null},"value, data"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when a new option is added to the available options list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"option_remove"'),(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when an option is removed from the available options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"option_clear"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when all options are removed from the control.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"optgroup_add"'),(0,l.kt)("td",{parentName:"tr",align:null},"id, data"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when a new option is added to the available options list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"optgroup_remove"'),(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when an option group is removed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"optgroup_clear"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when all option groups are removed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"dropdown_open"'),(0,l.kt)("td",{parentName:"tr",align:null},"dropdown"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the dropdown opens.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"dropdown_close"'),(0,l.kt)("td",{parentName:"tr",align:null},"dropdown"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the dropdown closes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"type"'),(0,l.kt)("td",{parentName:"tr",align:null},"str"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when the user types while filtering options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"load"'),(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked when new options have been loaded and added to the control (via the load option or load API method).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"destroy"'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Invoked right before the control is destroyed.")))))}k.isMDXComponent=!0}}]);